#!/usr/bin/python

import git_workflow_quality

import argparse
import sys

if __name__ == '__main__' :

    parser = argparse.ArgumentParser(description='Extract simple analytics from git repository')
    parser.add_argument('--detailed', action='store_true', help='Show per-branch statistics')
    parser.add_argument('--graph', choices=['topo', 'date', 'backwards'], help='Generate gitgraphjs file')
    parser.add_argument('--no-concatenate', dest='concatenate', action='store_false', help='Express branch relations in dot language')
    parser.add_argument('--dot', help='Express branch relations in dot language')
    args = parser.parse_args()

    repo = git_workflow_quality.Repository(args.concatenate)

    print repo.report(args.detailed)

    if args.graph == 'backwards' :
        git_workflow_quality.gitnetwork.graph( repo )
    elif args.graph :
        git_workflow_quality.gitgraphjs.graph( repo , args )

    print repo.events(args.detailed)

    if args.dot :
        fd = open( args.dot , 'w' )
        fd.write( 'digraph G {\n' )
        for branch in repo.branches :
            branch.dotlabel(fd)
        for branch in repo.branches :
            branch.digraph(fd)
        fd.write( '}\n' )
        fd.close()

